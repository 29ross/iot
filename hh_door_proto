#include <Servo.h>


const int servoPin = 9;
const int ledGreen = 3;
const int ledRed = 2;
const int buttonUpPin= 8;

Servo myservo;

int servoPos=90;

// NFC

#include <SoftwareSerial.h>
#include <PN532_SWHSU.h>
#include <PN532.h>
SoftwareSerial SWSerial( 5, 6) ; // RS, TX

PN532_SWHSU pn532swhsu( SWSerial);
PN532 nfc( pn532swhsu);
String tagId = "None", dispTag = "None";
byte nuidPICC[4];
 



void moveServo(int p) {

      myservo.write(p);
   
}



void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200); // Begin monitoring via the serial monitor

  delay(2000);

  Serial.println("Starting SMART thermometer");
  myservo.attach(servoPin, 500, 2500);
  nfc.begin();
  uint32_t versiondata = nfc.getFirmwareVersion();
  if (! versiondata)
  {
     Serial.println("Didnt find PN53x module");  
  } else {
    Serial.print("Found Chip PN5");
  }

    // Got valid data, print it out!
  Serial.print("Found chip PN5");
  Serial.println((versiondata >> 24) & 0xFF, HEX);
  Serial.print("Firmware ver. ");
  Serial.print((versiondata >> 16) & 0xFF, DEC);
  Serial.print('.'); 
  Serial.println((versiondata >> 8) & 0xFF, DEC);
  // Configure board to read RFID tags
  nfc.SAMConfig();
  //Serial.println("Waiting for an ISO14443A Card ...");
  Serial.println('done with NFC Setup'); 

  pinMode(buttonUpPin, INPUT);
  pinMode(ledGreen, OUTPUT);
  pinMode(ledRed, OUTPUT);

  digitalWrite(ledGreen, HIGH);
  delay(2000);
  digitalWrite(ledGreen, LOW);
  digitalWrite(ledRed, HIGH);
  delay(2000);

  digitalWrite(ledRed, LOW);
  
  
}



void readNFC()
{
  boolean success;
  uint8_t uid[] = { 0, 0, 0, 0, 0, 0, 0 };  // Buffer to store the returned UID
  uint8_t uidLength;                       // Length of the UID (4 or 7 bytes depending on ISO14443A card type)
  success = nfc.readPassiveTargetID(PN532_MIFARE_ISO14443A, &uid[0], &uidLength);

  if (success)
  {
    Serial.print("UID Length: ");
    Serial.print(uidLength, DEC);
    Serial.println(" bytes");
    Serial.print("UID Value: ");
    for (uint8_t i = 0; i < uidLength; i++)
    {
      nuidPICC[i] = uid[i];
      Serial.print(" "); Serial.print(uid[i], DEC);
    }
    Serial.println();
    tagId = tagToString(nuidPICC);
    dispTag = tagId;
    Serial.print(F("tagId is : "));
    Serial.println(tagId);
    Serial.println("");
    delay(1000);  // 1 second halt
  }
  else
  {
    // PN532 probably timed out waiting for a card
    Serial.println("Timed out! Waiting for a card...");
  }
}

String tagToString(byte id[4])
{
  String tagId = "";
  for (byte i = 0; i < 4; i++)
  {
    if (i < 3) tagId += String(id[i]) + ".";
    else tagId += String(id[i]);
  }
  return tagId;
}


void loop() {
  // put your main code here, to run repeatedly:
  int go = 0;

//    moveServo(180);
  int buttonUpState = digitalRead(buttonUpPin);    

  if (buttonUpState == HIGH) go = 1;

  readNFC();

  if (go) {
    Serial.println("buttonUp pressed");
    digitalWrite(ledRed, HIGH);
    moveServo(180);
 
 //   digitalWrite (ledGreen, HIGH);
    delay(2000);
    digitalWrite(ledRed, LOW);
    moveServo(90);    
    digitalWrite (ledGreen, HIGH);
    delay(500);
    digitalWrite(ledGreen, LOW);
  }
  
  
} // end loop
